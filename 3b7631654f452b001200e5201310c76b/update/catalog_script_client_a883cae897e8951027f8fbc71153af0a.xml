<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="catalog_script_client">
    <catalog_script_client action="INSERT_OR_UPDATE">
        <active>true</active>
        <applies_catalog>true</applies_catalog>
        <applies_extended>false</applies_extended>
        <applies_req_item>false</applies_req_item>
        <applies_sc_task>false</applies_sc_task>
        <applies_target_record>false</applies_target_record>
        <applies_to>item</applies_to>
        <cat_item display_value="_">217346e897e8951027f8fbc71153aff5</cat_item>
        <cat_variable>IO:b17386e897e8951027f8fbc71153afa2</cat_variable>
        <condition/>
        <description>This script is auto created thorugh runtime module for fetching values.</description>
        <field/>
        <global>true</global>
        <isolate_script>false</isolate_script>
        <messages/>
        <name>Fetch values OnChange</name>
        <order>1000</order>
        <script><![CDATA[function onChange(control, oldValue, newValue, isLoading) { var portal_check; var portalgr = new GlideAjax('x_nuta2_nutanix_ca.Nutanix_ClientServerScriptBridge'); portalgr.addParam('sysparm_name', 'getPortalCompatibility'); portalgr.getXMLAnswer(getPortalCheck); function getPortalCheck(response) { portal_check = response; if (portal_check == 'false') { if (!sessionStorage['varValues']) return; var varValues = JSON.parse(sessionStorage['varValues']); oldValue = varValues[control.id + '']; if (isLoading || newValue == '' || oldValue + '' == newValue + '') { new GlideModal().get('loader').destroy(); return; } function varResponse(response, loadingDialog) { var answer = response.responseXML.documentElement.getAttribute('answer'); var varJSON = JSON.parse(answer); var prof_json = varJSON.profile; var serv_json = varJSON.service; var var_array = []; for (var i in prof_json) { if (i + '' == control.id + '') continue; var field = prof_json[i]; var curr_value = g_form.getValue('IO:' + i); varValues['IO:' + i] = curr_value + ''; var parsed_field = JSON.parse(field); parsed_field.def_val = parsed_field.value + ''; parsed_field.value = curr_value, parsed_field.sys_id = i + '', var_array.push(parsed_field); } getAdvancedVars(var_array); for (var j in serv_json) { var_array = []; for (var k in serv_json[j]) { if (control.id + '' == k) { continue; } var field = serv_json[j][k]; var curr_value = g_form.getValue('IO:' + k); varValues['IO:' + k] = curr_value + ''; var parsed_field = JSON.parse(field); parsed_field.def_val = parsed_field.value + ''; parsed_field.value = curr_value, parsed_field.sys_id = k + '', var_array.push(parsed_field); } getAdvancedVars(var_array); } sessionStorage['varValues'] = JSON.stringify(varValues); } function getAdvancedVars(variable_json) { var act_var_JSON = JSON.stringify(variable_json); if (g_form.getValue('default_profile') != '') var profile = g_form.getValue('default_profile').trim(); else var profile = 'runbook'; var gajax = new GlideAjax('x_nuta2_nutanix_ca.Nutanix_ClientServerScriptBridge'); gajax.addParam('sysparm_name', 'variableArrayParser'), gajax.addParam('sysparm_field', control.id + ''), gajax.addParam('sysparm_type', 'catalog'), gajax.addParam('sysparm_parentUuid', g_form.getUniqueValue() + ''), gajax.addParam('sysparm_varJson', act_var_JSON), gajax.addParam('sysparm_profile_sysid', profile), gajax.addParam('sysparm_envsysid', g_form.getValue('default_environment')), gajax.getXML(getVarResponse); } function getVarResponse(response) { new GlideModal().get('loader').destroy(); var answer = response.responseXML.documentElement.getAttribute('answer'); if (answer + '' == '' || answer + '' == 'undefined' || answer + '' == 'null') return; var parsedResponse = JSON.parse(answer); for (var i in parsedResponse) { var row = parsedResponse[i]; var sys_id = 'IO:' + row.sys_id; if (control.id + '' == sys_id) { continue; } var type = row.type + ''; if (row.state == 'SUCCESS' && (type == 'EXEC_LOCAL' || type == 'HTTP_LOCAL' || type == 'EXEC_SECRET' || type == 'HTTP_SECRET')) { g_form.clearOptions(sys_id); for (var k = 0; k < row.value.length; k++) g_form.addOption(sys_id + '', row.value[k], row.value[k]); if(row.value!='undefined') g_form.setValue(sys_id, row.value); } else { if (row.data_type + '' != 'BASE') { g_form.clearOptions(sys_id); for (var k = 0; k < row.options.length; k++) g_form.addOption(sys_id + '', row.options[k], row.options[k]); } if(row.value!='undefined') g_form.setValue(sys_id, row.value); } if (row.state == 'ERROR') { g_form.clearOptions(sys_id); g_form.addErrorMessage('Error in variable: ' + row.name + ': ' + row.error[0]); } } } var loadingHTML = "<div class='loading-container'><div class='loading-indicator icon-loading icon-lg'></div></div>"; var loadingDialog = new GlideModal('loader', true); loadingDialog.setTitle('Fetching variables...'); loadingDialog.renderWithContent('' + loadingHTML); var cat_sys_id = g_form.getUniqueValue(); if (g_form.getValue('default_profile') != '') var profile = g_form.getValue('default_profile').trim(); else var profile = 'runbook'; var ga = new GlideAjax('x_nuta2_nutanix_ca.Nutanix_ClientServerScriptBridge'); ga.addParam('sysparm_name', 'fetchLaunchVars'), ga.addParam('sysparm_catsysid', cat_sys_id), ga.addParam('sysparm_profile', profile), ga.getXML(varResponse, null, loadingDialog); } else { try { if (!sessionStorage['varValues']) return;var control_id ='b17386e897e8951027f8fbc71153afa2'; var varValues = JSON.parse(sessionStorage['varValues']); oldValue = varValues[control_id + '']; if (isLoading || newValue == '' || oldValue + '' == newValue + '') { return; } console.log(oldValue); console.log(newValue); function varResponse(response) { var answer = response.responseXML.documentElement.getAttribute('answer'); var varJSON = JSON.parse(answer); var prof_json = varJSON.profile; var serv_json = varJSON.service; var var_array = []; for (var i in prof_json) { var field = prof_json[i]; var curr_value = g_form.getValue('IO:' + i); varValues['IO:' + i] = curr_value + ''; var parsed_field = JSON.parse(field); parsed_field.def_val = parsed_field.value + ''; parsed_field.value = curr_value, parsed_field.sys_id = i + '', var_array.push(parsed_field); } getAdvancedVars(var_array); for (var j in serv_json) { var_array = []; for (var k in serv_json[j]) { var field = serv_json[j][k]; var curr_value = g_form.getValue('IO:' + k); varValues['IO:' + k] = curr_value + ''; var parsed_field = JSON.parse(field); parsed_field.def_val = parsed_field.value + ''; parsed_field.value = curr_value, parsed_field.sys_id = k + '', var_array.push(parsed_field); } getAdvancedVars(var_array); } sessionStorage['varValues'] = JSON.stringify(varValues); } function getAdvancedVars(variable_json) { var act_var_JSON = JSON.stringify(variable_json); if (g_form.getValue('default_profile') != '') var profile = g_form.getValue('default_profile').trim(); else var profile = 'runbook'; var gajax = new GlideAjax('x_nuta2_nutanix_ca.Nutanix_ClientServerScriptBridge'); gajax.addParam('sysparm_name', 'variableArrayParser'), gajax.addParam('sysparm_field', control_id + ''), gajax.addParam('sysparm_type', 'catalog'), gajax.addParam('sysparm_parentUuid', g_form.getUniqueValue() + ''), gajax.addParam('sysparm_varJson', act_var_JSON), gajax.addParam('sysparm_profile_sysid', profile), gajax.addParam('sysparm_envsysid', g_form.getValue('default_environment')), gajax.getXML(getVarResponse); } function getVarResponse(response) { var answer = response.responseXML.documentElement.getAttribute('answer'); if (answer + '' == '' || answer + '' == 'undefined' || answer + '' == 'null') return; var parsedResponse = JSON.parse(answer); for (var i in parsedResponse) { var row = parsedResponse[i]; var sys_id = 'IO:' + row.sys_id; var type = row.type + ''; if (row.state == 'SUCCESS' && (type == 'EXEC_LOCAL' || type == 'HTTP_LOCAL' || type == 'EXEC_SECRET' || type == 'HTTP_SECRET')) { g_form.clearOptions(sys_id); for (var k = 0; k < row.value.length; k++) g_form.addOption(sys_id + '', row.value[k], row.value[k]); if(row.value[0]!='undefined') g_form.setValue(sys_id, row.value[0]); } else { if (row.data_type + '' != 'BASE') { g_form.clearOptions(sys_id); for (var k = 0; k < row.options.length; k++) g_form.addOption(sys_id + '', row.options[k], row.options[k]); } if(row.value!='undefined') g_form.setValue(sys_id, row.value); } row.state == 'ERROR' && g_form.addErrorMessage('Error in variable: ' + row.name + ': ' + row.error[0]); } } var cat_sys_id = g_form.getUniqueValue(); if (g_form.getValue('default_profile') != '') var profile = g_form.getValue('default_profile').trim(); else var profile = 'runbook'; var ga = new GlideAjax('x_nuta2_nutanix_ca.Nutanix_ClientServerScriptBridge'); ga.addParam('sysparm_name', 'fetchLaunchVars'), ga.addParam('sysparm_catsysid', cat_sys_id), ga.addParam('sysparm_profile', profile), ga.getXML(varResponse); } catch (e) { console.log('Fetch values OnChange' + e) } } } }]]></script>
        <sys_class_name>catalog_script_client</sys_class_name>
        <sys_created_by>system</sys_created_by>
        <sys_created_on>2022-07-04 11:17:09</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>a883cae897e8951027f8fbc71153af0a</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name>Fetch values OnChange</sys_name>
        <sys_overrides/>
        <sys_package display_value="Global" source="global">global</sys_package>
        <sys_policy>protected</sys_policy>
        <sys_scope display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</sys_scope>
        <sys_update_name>catalog_script_client_a883cae897e8951027f8fbc71153af0a</sys_update_name>
        <sys_updated_by>system</sys_updated_by>
        <sys_updated_on>2022-07-04 11:17:09</sys_updated_on>
        <table/>
        <type>onChange</type>
        <ui_type>10</ui_type>
        <variable_set/>
        <view/>
    </catalog_script_client>
</record_update>
