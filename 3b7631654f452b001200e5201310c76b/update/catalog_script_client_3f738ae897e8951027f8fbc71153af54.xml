<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="catalog_script_client">
    <catalog_script_client action="INSERT_OR_UPDATE">
        <active>true</active>
        <applies_catalog>true</applies_catalog>
        <applies_extended>false</applies_extended>
        <applies_req_item>false</applies_req_item>
        <applies_sc_task>false</applies_sc_task>
        <applies_target_record>false</applies_target_record>
        <applies_to>item</applies_to>
        <cat_item display_value="_">217346e897e8951027f8fbc71153aff5</cat_item>
        <cat_variable>IO:ee730ae897e8951027f8fbc71153af41</cat_variable>
        <condition/>
        <description>This script is auto created thorugh runtime module for getting variables on change of profile.</description>
        <field/>
        <global>true</global>
        <isolate_script>false</isolate_script>
        <messages/>
        <name>Fetch dependencies on change of profile</name>
        <order>900</order>
        <script><![CDATA[function onChange(control, oldValue, newValue, isLoading) { if (isLoading || newValue == '') { return; } var portal_check; var portalgr = new GlideAjax('x_nuta2_nutanix_ca.Nutanix_ClientServerScriptBridge'); portalgr.addParam('sysparm_name', 'getPortalCompatibility'); portalgr.getXMLAnswer(getPortalCheck); function getPortalCheck(response) { portal_check = response; var cat_sys_id = g_form.getUniqueValue(); var profile = (newValue + '').trim(); var ga = new GlideAjax('x_nuta2_nutanix_ca.Nutanix_ClientServerScriptBridge'); ga.addParam('sysparm_name', 'fetchLaunchVars'); ga.addParam('sysparm_catsysid', cat_sys_id); ga.addParam('sysparm_profile', profile); ga.getXML(varResponse); function varResponse(response) { var answer = response.responseXML.documentElement.getAttribute('answer'); console.log(answer); var varJSON = JSON.parse(answer); var prof_json = varJSON.profile; var serv_json = varJSON.service; var sess_json = {}; var var_array = []; for (var i in prof_json) { var field = prof_json[i]; var curr_value = g_form.getValue('IO:' + i); var parsed_field = JSON.parse(field); if (portal_check == 'false') parsed_field.def_val = parsed_field.value + ''; parsed_field.value = curr_value; parsed_field.sys_id = i + ''; sess_json['IO:' + i] = curr_value; var_array.push(parsed_field); } getAdvancedVars(var_array); for (var j in serv_json) { var_array = []; for (var k in serv_json[j]) { var field = serv_json[j][k]; var curr_value = g_form.getValue('IO:' + k); var parsed_field = JSON.parse(field); if (portal_check == 'false') parsed_field.def_val = parsed_field.value + ''; parsed_field.value = curr_value; parsed_field.sys_id = k + ''; sess_json['IO:' + k] = curr_value; var_array.push(parsed_field); } getAdvancedVars(var_array); } sessionStorage['varValues'] = JSON.stringify(sess_json); function getAdvancedVars(variable_json) { var act_var_JSON = JSON.stringify(variable_json); var gajax = new GlideAjax('x_nuta2_nutanix_ca.Nutanix_ClientServerScriptBridge'); gajax.addParam('sysparm_name', 'variableArrayParser'); gajax.addParam('sysparm_type', 'catalog'); gajax.addParam('sysparm_field', 'onLoad'); gajax.addParam('sysparm_parentUuid', g_form.getUniqueValue() + ''); gajax.addParam('sysparm_varJson', act_var_JSON); gajax.addParam('sysparm_profile_sysid', g_form.getValue('default_profile')); gajax.addParam('sysparm_envsysid', g_form.getValue('default_environment')); gajax.getXML(getVarResponse); } function getVarResponse(response) { var answer = response.responseXML.documentElement.getAttribute('answer'); if (answer + '' == '' || answer + '' == 'undefined' || answer + '' == 'null') return; var parsedResponse = JSON.parse(answer); for (var i in parsedResponse) { var row = parsedResponse[i]; var sys_id = 'IO:' + row.sys_id; var type = row.type + ''; if (row.state == 'SUCCESS' && (type == 'EXEC_LOCAL' || type == 'HTTP_LOCAL' || type == 'EXEC_SECRET' || type == 'HTTP_SECRET')) { g_form.clearOptions(sys_id); if (row.value) { for (var k = 0; k < row.value.length; k++) g_form.addOption(sys_id + '', row.value[k], row.value[k]); } if (row.value != '' && row.value != 'undefined') { g_form.setValue(sys_id, row.value[0]); } } else { if (row.data_type + '' != 'BASE') { g_form.clearOptions(sys_id); if (row.options) { for (var k = 0; k < row.options.length; k++) g_form.addOption(sys_id + '', row.options[k], row.options[k]); } } if (row.value != '' && row.value != 'undefined') { g_form.setValue(sys_id, row.value); } } if (row.state == 'ERROR') { g_form.addErrorMessage('Error in variable: ' + row.name + ': ' + row.error[0]); } if (portal_check == 'false') new GlideModal().get('variables_loader').destroy(); } } } } }]]></script>
        <sys_class_name>catalog_script_client</sys_class_name>
        <sys_created_by>system</sys_created_by>
        <sys_created_on>2022-07-04 11:17:06</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>3f738ae897e8951027f8fbc71153af54</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name>Fetch dependencies on change of profile</sys_name>
        <sys_overrides/>
        <sys_package display_value="Global" source="global">global</sys_package>
        <sys_policy>protected</sys_policy>
        <sys_scope display_value="Nutanix Calm">3b7631654f452b001200e5201310c76b</sys_scope>
        <sys_update_name>catalog_script_client_3f738ae897e8951027f8fbc71153af54</sys_update_name>
        <sys_updated_by>system</sys_updated_by>
        <sys_updated_on>2022-07-04 11:17:06</sys_updated_on>
        <table/>
        <type>onChange</type>
        <ui_type>10</ui_type>
        <variable_set/>
        <view/>
    </catalog_script_client>
</record_update>
